import dependencies.Version
import dependencies.Dependencies

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion Version.compileSdk

    defaultConfig {
        applicationId "com.news.app"
        minSdkVersion Version.minSdk
        targetSdkVersion Version.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "NEWS_API_KEY", "\"${getProperty("gradle.properties", "NEWS_API_KEY")}\""
        buildConfigField "String", "BASE_URL", '"https://newsapi.org/v2/"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }

    androidExtensions {
        experimental = true
    }

    buildFeatures {
        dataBinding true
        viewBinding true
        compose true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion Version.compose
        kotlinCompilerVersion Version.kotlinVersion
    }

}

dependencies {

    implementation Dependencies.Kotlin.kotlin_stdlib
    implementation Dependencies.AndroidX.coreKtx
    implementation Dependencies.AndroidX.appcompat
    implementation Dependencies.AndroidX.materialDesign
    implementation Dependencies.AndroidX.constraintLayout
    implementation Dependencies.AndroidX.swipeRefreshLayout
    implementation Dependencies.AndroidX.fragmentKtx

    // Compose
    implementation Dependencies.Compose.composeUi
    implementation Dependencies.Compose.composeMaterial
    implementation Dependencies.Compose.composeUIToolingPreview
    implementation Dependencies.Compose.composeActivity
    implementation Dependencies.Compose.coilCompose
    implementation Dependencies.Compose.composeRuntime
    implementation Dependencies.Compose.composeRuntimeLiveData
    androidTestImplementation Dependencies.Compose.composeUiTestJUnit4
    debugImplementation Dependencies.Compose.composeTestUiTooling

    // Test dependencies
    androidTestImplementation Dependencies.Test.espressoCore
    androidTestImplementation Dependencies.Test.espressoContrib
    androidTestImplementation Dependencies.Test.rules
    androidTestImplementation Dependencies.Test.runner
    testImplementation Dependencies.Test.junit
    testImplementation Dependencies.Test.mockitoCore
    testImplementation Dependencies.Test.mockitoInline
    testImplementation Dependencies.Test.mockitoKotlin
    testImplementation Dependencies.Test.assertJCore
    testImplementation Dependencies.Test.roomTesting
    testImplementation Dependencies.Test.coreTesting
    testImplementation Dependencies.Test.roboelectric

    // ViewModel
    implementation Dependencies.Lifecycle.lifecycleViewModelKtx
    implementation Dependencies.Lifecycle.lifeCycleExtension
    implementation Dependencies.Lifecycle.lifecycleRuntimeKtx

    // RxJava
    implementation Dependencies.RxJava.rxjava2
    implementation Dependencies.RxJava.rxAndroid

    // Coroutines
    implementation Dependencies.Coroutines.core
    implementation Dependencies.Coroutines.android

    // Dagger Hilt
    implementation Dependencies.Dagger.hiltAndroid
    kapt Dependencies.Dagger.hiltCompiler

    // Retrofit
    implementation Dependencies.Networking.retrofit
    implementation Dependencies.Networking.converterGson
    implementation Dependencies.Networking.adapterRxjava2
    implementation Dependencies.Networking.loggingInterceptor

    // Room components
    implementation Dependencies.Room.runtime
    implementation Dependencies.Room.roomKtx
    implementation Dependencies.Room.roomRxJava2
    kapt Dependencies.Room.roomCompiler
    androidTestImplementation Dependencies.Room.roomTesting

    // Gson
    implementation Dependencies.gson

    // Image Loading and Caching
    implementation Dependencies.Glide.glide
    annotationProcessor Dependencies.Glide.annotationCompiler

    kapt "com.android.databinding:compiler:3.1.4"
}

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}